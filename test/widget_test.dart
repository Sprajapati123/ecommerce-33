// This is a basic Flutter widget test.
//
// To perform an interaction with a widget in your test, use the WidgetTester
// utility in the flutter_test package. For example, you can send tap and scroll
// gestures. You can also use WidgetTester to find child widgets in the widget
// tree, read text, and verify that the values of widget properties are correct.

import 'package:ecommerce/firebase_options.dart';
import 'package:ecommerce/screens/makerstext.dart';
import 'package:ecommerce/screens/product/add_product_screen.dart';
import 'package:ecommerce/textboxwidget.dart';
import 'package:ecommerce/viewmodels/auth_viewmodel.dart';
import 'package:ecommerce/viewmodels/category_viewmodel.dart';
import 'package:ecommerce/viewmodels/global_ui_viewmodel.dart';
import 'package:ecommerce/viewmodels/product_viewmodel.dart';
import 'package:firebase_core/firebase_core.dart';
import 'package:flutter/material.dart';
import 'package:flutter_test/flutter_test.dart';

import 'package:ecommerce/main.dart';
import 'package:provider/provider.dart';

void main() async {
  group("group", () {
    testWidgets('ListView generated by List.generate',
        (WidgetTester tester) async {
      // Build your widget tree
      await tester.pumpWidget(
        MaterialApp(
          home: Scaffold(
            body: ListView(

              children: List.generate(
                5, // Generate 5 items
                (index) => ListTile(key: Key('a'), title: Text('Item $index')),
              ),
            ),
          ),
        ),
      );

      // Expect that there are 5 ListTiles with specific text in the ListView
      expect(find.text('Item 0'), findsOneWidget);
      expect(find.text('Item 1'), findsOneWidget);
      expect(find.text('Item 2'), findsOneWidget);
      expect(find.text('Item 3'), findsOneWidget);
      expect(find.text('Item 4'), findsOneWidget);

      // Verify that there are no other ListTiles present
      expect(find.byKey(Key('a')),
          findsNWidgets(5)); // There should be exactly 5 ListTiles
    });

    testWidgets('Textbox test', (tester) async {
      // Create the widget by telling the tester to build it.
      await tester.pumpWidget(
          const MaterialApp(home: Material(child: TextBoxWidget())));

      // Enter 'hi' into the TextField.
      await tester.enterText(find.byType(TextFormField), 'hi');

      // click on save button
      await tester.tap(find.byType(ElevatedButton));
      // rebuild
      await tester.pump();

      // Create the Finders.
      final messageFinder = find.text('hi');

      // Use the `findsOneWidget` matcher provided by flutter_test to
      // verify that the Text widgets appear exactly once in the widget tree.
      expect(messageFinder, findsOneWidget);
    });
  });
}
